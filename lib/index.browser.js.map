{"version":3,"file":"index.browser.js","sources":["../src/util.js","../src/base.js","../src/simple.js","../src/combined.js","../src/index.js"],"sourcesContent":["//\n//  util.js\n//  validated-attributes\n//\n//  Created by Patrick Schneider on 17.07.18.\n//  Copyright (c) 2018 MeetNow! GmbH. All rights reserved.\n//\n// @flow\n//\n\nconst typeConversion = {\n  undefined: 'undefined',\n  number: 'number',\n  boolean: 'boolean',\n  string: 'string',\n  function: 'function',\n  '[object Function]': 'function',\n  '[object RegExp]': 'regexp',\n  '[object Array]': 'array',\n  '[object Date]': 'date',\n  '[object Error]': 'error',\n  '[object Null]': 'null',\n  '[object Symbol]': 'symbol',\n};\n\nconst objToString = Object.prototype.toString;\n\nconst objHasOwnProperty = Object.prototype.hasOwnProperty;\n\nexport function typeofPlus(x: mixed): string {\n  return typeConversion[typeof x] || typeConversion[objToString.call(x)] || (x ? 'object' : 'null');\n}\n\nexport function hasOwnProperty(obj: Object, name: string): boolean {\n  return objHasOwnProperty.call(obj, name);\n}\n\n/**\n Variant of Object.assign to be consistent across implementations\n */\nexport function assign(obj: Object, source: ?Object): Object {\n  if (source != null) {\n    for (const key in source) {\n      if (hasOwnProperty(source, key)) {\n        obj[key] = source[key]; // eslint-disable-line no-param-reassign\n      }\n    }\n  }\n  return obj;\n}\n\n/**\n Variant of Object.keys to be consistent across implementations\n */\nexport function keys(obj: Object): Array<string> {\n  if (typeof obj !== 'function' && (typeof obj !== 'object' || obj === null)) {\n    throw new TypeError('Object.keys called on non-object');\n  }\n  const result = [];\n  for (const key in obj) {\n    if (hasOwnProperty(obj, key)) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n A variant of the NodeJS' inspect function for internal use\n */\nexport function inspect(value: any, depth: number = 3) {\n  let isArray;\n  switch (typeofPlus(value)) {\n    case 'undefined':\n      return 'undefined';\n    case 'number':\n      return value.toString();\n    case 'boolean':\n      return (value ? 'true' : 'false');\n    case 'string':\n      return `'${JSON.stringify(value).replace(/^\"|\"$/g, '').replace(/'/g, \"\\\\'\").replace(/\\\\\"/g, '\"')}'`;\n    case 'function':\n      return (value.name ? `[Function: ${value.name}]` : '[Function]');\n    case 'regexp':\n      return RegExp.prototype.toString.call(value);\n    case 'array':\n      isArray = true;\n      break;\n    case 'date':\n      return Date.prototype.toString.call(value);\n    case 'error':\n      return `[${Error.prototype.toString.call(value)}]`;\n    case 'null':\n      return 'null';\n    case 'symbol':\n      return Symbol.prototype.toString.call(value);\n    default:\n      isArray = false;\n      break;\n  }\n\n  if (depth === -1) {\n    if (isArray) {\n      return '[Array]';\n    }\n    else {\n      return '[Object]';\n    }\n  }\n\n  const contents = [];\n  if (isArray) {\n    for (let i = 0, l = value.length; i < l; ++i) {\n      contents.push(inspect(value[i], depth - 1));\n    }\n    return `[ ${contents.join(', ')} ]`;\n  }\n  else {\n    keys(value).forEach((key) => {\n      let name = JSON.stringify(key);\n      if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n        name = name.substr(1, name.length - 2);\n      }\n      else {\n        name = name.replace(/'/g, \"\\\\'\").replace(/\\\\\"/g, '\"').replace(/(^\"|\"$)/g, \"'\");\n      }\n      contents.push(`${name}: ${inspect(value[key], depth - 1)}`);\n    });\n    return `{ ${contents.join(', ')} }`;\n  }\n}\n","//\n//  base.js\n//  validated-attributes\n//\n//  Created by Patrick Schneider on 17.07.18.\n//  Copyright (c) 2018 MeetNow! GmbH. All rights reserved.\n//\n// @flow\n//\n\nimport type { ValidatorFn, DefaultValue } from './types';\n\nimport { assign, inspect } from './util';\n\n/**\n Error class for validation errors\n\n You might want to test a thrown error with `instanceof` against this class.\n */\nexport class AttributeValidationError extends Error {\n  expected: string;\n  got: mixed;\n  optional: boolean;\n\n  constructor(expected: string, got: mixed, optional: boolean) {\n    super(`expected: ${expected}${optional ? ' (optional)' : ''}\\ngot: ${inspect(got)}`);\n    this.expected = expected;\n    this.got = got;\n    this.optional = optional;\n  }\n}\n\n/**\n Base class for attributes\n\n You can inherit from this class to extend Attribute.js; you must override at\n least the `_clone` method.\n */\nexport class Attribute {\n  /** Name of the attribute; usually reflects its type */\n  name: string;\n\n  /** Arbitrary flags you can use for your application purposes */\n  flags: {[string]: mixed};\n\n  /** Default value of the attribute (function that creates a default or immutable value) */\n  default: DefaultValue;\n\n  /** Whether this attribute is marked as optional; changes behavior of validate and newSkeleton */\n  isOptional: bool;\n\n  /** Base validator function */\n  _validator: ValidatorFn;\n\n  /**\n   Base constructor for attribute objects\n\n   Takes a validator function and a default value\n   */\n  constructor(validator: ValidatorFn, defaultsTo: ?DefaultValue) {\n    this.flags = {};\n    this.default = defaultsTo;\n    this.isOptional = false;\n    this._validator = validator;\n  }\n\n  /**\n   Main method for validation\n\n   Throws `AttributeValidationError` on, you guessed it, validation errors.\n   Returns the validated object on success.\n\n   The default implementation calls the underlying validator function\n\n   Note: for use with flow type, cast the returned object to your target type.\n   */\n  validate(input: mixed): any {\n    if (input == null) {\n      if (!this.isOptional) {\n        throw new AttributeValidationError(this.name, input, false);\n      }\n    }\n    else if (!this._validator(input)) {\n      throw new AttributeValidationError(this.name, input, this.isOptional);\n    }\n    return input;\n  }\n\n  /**\n   Creates a new default value for this attribute\n\n   Returns the value set with `defaultsTo` or, if it is a function, invokes\n   it and returns its result.\n   */\n  newDefault(): mixed {\n    if (typeof this.default === 'function') {\n      return this.default();\n    }\n    else {\n      return this.default;\n    }\n  }\n\n  /**\n   Merges the given value with the default of this attribute\n\n   Optionally treats `null` as `undefined` even for optional attributes.\n\n   Works best for schema or tuple attributes since it works recursively; it will\n   also remove any fields that are not specified in the schema (!)\n   */\n  mergeDefault(value: mixed, nullIsUndefined: ?boolean): any {\n    if (value === undefined || (value === null && (!this.isOptional || nullIsUndefined))) {\n      return this.newDefault();\n    }\n    else {\n      return value;\n    }\n  }\n\n  /**\n   Returns a new skeleton for this attribute\n\n   This is most useful for schema or compound attributes, where it will emit\n   an object or array whose fields are set to null or which is empty.\n   */\n  newSkeleton(): mixed {\n    return null;\n  }\n\n  /**\n   Sets the attributes default value\n\n   The default can be a (immutable) value or a function creating a value. The\n   latter is recommended if the value is something mutable, like an array or\n   object.\n\n   Clones the attribute object.\n   */\n  defaultsTo(newDefault: DefaultValue): this {\n    const c = this._clone();\n    c.default = newDefault;\n    return c;\n  }\n\n  /**\n   Adds one or more boolean flags\n\n   Same as calling `with({'flag1': true, 'flag2': true, ...})`.\n\n   Clones the attribute object.\n   */\n  as(...flags: Array<string>): this {\n    const c = this._clone();\n    for (const flag of flags) {\n      if (typeof flag !== 'string') {\n        throw new Error('flags must be strings');\n      }\n      c.flags[flag] = true;\n    }\n    return c;\n  }\n\n  /**\n   Adds one or more arbitrary flags\n\n   Clones the attribute object.\n   */\n  with(flags: {[string]: mixed}): this {\n    const c = this._clone();\n    assign(c.flags, flags);\n    return c;\n  }\n\n  /**\n   Turns the attribute optional\n\n   Clones the attribute object.\n   */\n  makeOptional(): this {\n    const c = this._clone();\n    c.isOptional = true;\n    return c;\n  }\n\n  /**\n   Internal method to clone an attribute object\n\n   Subclasses must override this method, and call `_copyAttrProps` on the new\n   instance. Do not call the base implementation.\n   */\n  _clone(): Attribute {\n    return new Attribute(this._validator)._copyAttrProps(this);\n  }\n\n  /**\n   Internal method that copies internal properties from the given attribute to\n   this attribute\n\n   Used by `_clone`. Subclasses must call the base implementation before copying\n   their own properties.\n\n   The base implementation copies the name, isOptional, default and flags\n   (as shallow copy). Returns `this`.\n   */\n  _copyAttrProps(source: Attribute): this {\n    this.name = source.name;\n    this.isOptional = source.isOptional;\n    this.default = source.default;\n    assign(this.flags, source.flags);\n    return this;\n  }\n}\n","//\n//  simple.js\n//  validated-attributes\n//\n//  Created by Patrick Schneider on 17.07.18.\n//  Copyright (c) 2018 MeetNow! GmbH. All rights reserved.\n//\n// @flow\n//\n\nimport { Attribute } from './base';\n\nimport { typeofPlus } from './util';\n\nexport class FixedAttribute extends Attribute {\n  /** The fixed value itself */\n  value: mixed;\n\n  /** Type of the fixed value */\n  valueType: string;\n\n  constructor(value: mixed) {\n    super(x => x === value, value);\n    this.value = value;\n    this.valueType = typeofPlus(value);\n  }\n\n  _clone(): FixedAttribute {\n    return new FixedAttribute(this.value)._copyAttrProps(this);\n  }\n}\n\n/**\n Represents an instanceOf-attribute\n\n The class is instantiated with an emty constructor as default.\n */\nexport class ObjectAttribute extends Attribute {\n  cls: any;\n\n  constructor(Cls: any) {\n    super(x => x instanceof Cls, () => new Cls());\n    this.cls = Cls;\n  }\n\n  _clone(): ObjectAttribute {\n    return new ObjectAttribute(this.cls)._copyAttrProps(this);\n  }\n}\n","//\n//  combined.js\n//  validated-attributes\n//\n//  Created by Patrick Schneider on 17.07.18.\n//  Copyright (c) 2018 MeetNow! GmbH. All rights reserved.\n//\n// @flow\n//\n\nimport { AttributeValidationError, Attribute } from './base';\n\nimport { FixedAttribute } from './simple';\n\nimport type { ValidatorFn, ElementIterator } from './types';\n\nimport { typeofPlus, hasOwnProperty } from './util';\n\n/**\n Represents an oneOf-attribute\n\n The first value is used to generate the default.\n */\nexport class EnumAttribute extends Attribute {\n  /** List of valid attributes for this enum */\n  values: Array<Attribute>;\n\n  constructor(values: Array<any>) {\n    const attrs = values.map(toAttribute);\n    super(x => attrs.some(y => isValid(y, x)), attrs[0].default);\n    this.values = attrs;\n  }\n\n  _clone(): EnumAttribute {\n    return new EnumAttribute(this.values)._copyAttrProps(this);\n  }\n}\n\n/**\n Represents an array attribute with fixed number and type of entries\n\n The default value is an array with default values of each type. The skeleton\n is either `null` for optional tuples or an array with all values set to the\n skeleton of each type.\n */\nexport class TupleAttribute extends Attribute {\n  /** Array of attributes to validate the tuple's contents against */\n  elements: Array<Attribute>;\n\n  constructor(selements: Array<any>) {\n    if (typeofPlus(selements) !== 'array') {\n      throw new Error('you need to pass a plain array describing the elements');\n    }\n\n    const elements = [];\n    for (let i = 0; i < selements.length; i++) {\n      elements.push(toAttribute(selements[i]));\n    }\n\n    super(x => typeofPlus(x) === 'array', () => elements.map(e => e.newDefault()));\n    this.elements = elements;\n  }\n\n  validate(input: any): any {\n    super.validate(input);\n\n    if (input == null) {\n      return input;\n    }\n\n    if (input.length !== this.elements.length) {\n      throw new AttributeValidationError(\n        `tuple of length ${this.elements.length}`,\n        `tuple of length ${input.length}`,\n        this.isOptional\n      );\n    }\n\n    const errors = [];\n    for (let i = 0; i < this.elements.length; i++) {\n      try {\n        this.elements[i].validate(input[i]);\n      }\n      catch (err) {\n        if (err instanceof AttributeValidationError) {\n          errors.push({\n            expected: `${err.expected} element`,\n            index: i,\n            optional: err.optional,\n            got: err.got,\n          });\n        }\n        else {\n          throw err;\n        }\n      }\n    }\n    if (errors.length > 0) {\n      throw new AttributeValidationError(`valid ${this.name} fields`, errors, this.isOptional);\n    }\n\n    return input;\n  }\n\n  mergeDefault(value: mixed, nullIsUndefined: ?boolean): any {\n    if (value === undefined || (value === null && (!this.isOptional || nullIsUndefined))) {\n      return this.newDefault();\n    }\n    else if (value == null || !Array.isArray(value)) {\n      throw new Error('value must be an array (or undefined)');\n    }\n    else if (value.length !== this.elements.length) {\n      throw new Error('the number of elements must be equal');\n    }\n    else {\n      const arr = [];\n      for (let i = 0; i < this.elements.length; i++) {\n        arr.push(this.elements[i].mergeDefault(value[i], nullIsUndefined));\n      }\n      return arr;\n    }\n  }\n\n  newSkeleton(): ?Array<mixed> {\n    if (this.isOptional) {\n      return null;\n    }\n    else {\n      return this.elements.map(e => e.newSkeleton());\n    }\n  }\n\n  _clone(): TupleAttribute {\n    return new TupleAttribute(this.elements)._copyAttrProps(this);\n  }\n}\n\n/**\n Represents array and map attributes\n\n Optionally the values can be type-checked as well. Use `ofType` for this.\n\n If the attribute is marked as optional, `newSkeleton` will return null.\n Otherwise it creates an empty array or map.\n */\nexport class CompoundAttribute extends Attribute {\n  /** Attribute that all elements must have */\n  elementAttr: ?Attribute;\n\n  _skeletonMaker: () => mixed;\n  _iterator: ElementIterator;\n\n  constructor(validator: ValidatorFn, skeletonMaker: () => mixed, iterator: ElementIterator) {\n    super(validator, skeletonMaker);\n    this._skeletonMaker = skeletonMaker;\n    this._iterator = iterator;\n  }\n\n  /**\n   Bind a type to the contents of the compound attribute\n\n   All values of the compound will be validated against the given attribute.\n\n   Clones the attribute object.\n   */\n  ofType(spec: any): this {\n    const c = this._clone();\n    const elementAttr = toAttribute(spec);\n    c.elementAttr = elementAttr;\n    const i = this.name.indexOf('<');\n    if (i === -1) {\n      c.name = `${this.name}<${elementAttr.name}>`;\n    }\n    else {\n      c.name = `${this.name.substr(0, i)}<${elementAttr.name}>`;\n    }\n    return c;\n  }\n\n  validate(input: mixed): any {\n    super.validate(input);\n\n    if (input == null || this.elementAttr == null) {\n      return input;\n    }\n\n    const eltAttr = this.elementAttr;\n    const errors = [];\n    this._iterator(input, (elt, index) => {\n      try {\n        eltAttr.validate(elt);\n      }\n      catch (err) {\n        if (err instanceof AttributeValidationError) {\n          errors.push({\n            expected: `${err.expected} element`,\n            key: index,\n            optional: err.optional,\n            got: err.got,\n          });\n        }\n        else {\n          throw err;\n        }\n      }\n    });\n    if (errors.length > 0) {\n      throw new AttributeValidationError(`valid ${this.name} elements`, errors, this.isOptional);\n    }\n\n    return input;\n  }\n\n  newSkeleton() {\n    if (this.isOptional) {\n      return null;\n    }\n    else {\n      return this._skeletonMaker();\n    }\n  }\n\n  _clone(): CompoundAttribute {\n    return new CompoundAttribute(this._validator, this._skeletonMaker, this._iterator)._copyAttrProps(this);\n  }\n\n  _copyAttrProps(source: Attribute): this {\n    super._copyAttrProps(source);\n    // source is contravariant, need to check\n    if (source instanceof CompoundAttribute) {\n      this.elementAttr = source.elementAttr;\n    }\n    return this;\n  }\n}\n\n/**\n Represents a (plain) object attribute with fields of given types\n\n The default value is an object with default values of each type for each field.\n The skeleton is either `null` for optional schemas or an object with all values\n set to the skeleton of each type.\n */\nexport class SchemaAttribute extends Attribute {\n  /** Fields to validate */\n  fields: {[string]: Attribute};\n\n  constructor(sfields: {[string]: any}) {\n    if (typeofPlus(sfields) !== 'object') {\n      throw new Error('you need to pass a plain object describing the attributes');\n    }\n\n    const fields = {};\n    for (const f in sfields) {\n      if (hasOwnProperty(sfields, f)) {\n        fields[f] = toAttribute(sfields[f]);\n      }\n    }\n\n    super(x => typeofPlus(x) === 'object', () => {\n      const obj = {};\n      for (const f in fields) {\n        if (hasOwnProperty(fields, f)) {\n          obj[f] = fields[f].newDefault();\n        }\n      }\n      return obj;\n    });\n    this.fields = fields;\n  }\n\n  validate(input: any): any {\n    super.validate(input);\n\n    if (input == null) {\n      return input;\n    }\n\n    const errors = [];\n    for (const f in this.fields) {\n      if (hasOwnProperty(this.fields, f)) {\n        try {\n          this.fields[f].validate(input[f]);\n        }\n        catch (err) {\n          if (err instanceof AttributeValidationError) {\n            errors.push({\n              expected: `${err.expected} field`,\n              name: f,\n              optional: err.optional,\n              got: err.got,\n            });\n          }\n          else {\n            throw err;\n          }\n        }\n      }\n    }\n    if (errors.length > 0) {\n      throw new AttributeValidationError(`valid ${this.name}`, errors, this.isOptional);\n    }\n\n    return input;\n  }\n\n  mergeDefault(value: mixed, nullIsUndefined: ?boolean): any {\n    if (value === undefined || (value === null && (!this.isOptional || nullIsUndefined))) {\n      return this.newDefault();\n    }\n    else if (value == null || typeof value !== 'object') {\n      throw new Error('value must be an object (or undefined)');\n    }\n    else {\n      const obj = {};\n      for (const f in this.fields) {\n        if (hasOwnProperty(this.fields, f)) {\n          obj[f] = this.fields[f].mergeDefault(value[f], nullIsUndefined);\n        }\n      }\n      return obj;\n    }\n  }\n\n  newSkeleton() {\n    if (this.isOptional) {\n      return null;\n    }\n    else {\n      const obj = {};\n      for (const f in this.fields) {\n        if (hasOwnProperty(this.fields, f)) {\n          obj[f] = this.fields[f].newSkeleton();\n        }\n      }\n      return obj;\n    }\n  }\n\n  _clone(): SchemaAttribute {\n    return new SchemaAttribute(this.fields)._copyAttrProps(this);\n  }\n}\n\n/**\n Converts a fixed value or tuple or schema\n */\nexport function toAttribute(v: any): Attribute {\n  if (v instanceof Attribute) {\n    return v;\n  }\n\n  switch (typeofPlus(v)) {\n    case 'object': {\n      const a = new SchemaAttribute(v);\n      a.name = 'schema';\n      return a;\n    }\n    case 'array': {\n      const a = new TupleAttribute(v);\n      a.name = 'tuple';\n      return a;\n    }\n    default: {\n      const a = new FixedAttribute(v);\n      a.name = JSON.stringify(v);\n      return a;\n    }\n  }\n}\n\n/**\n Tests a value against a specification\n\n Returns true or false rather than trowing an exception\n */\nexport function isValid(spec: any, value: mixed): boolean {\n  try {\n    toAttribute(spec).validate(value);\n    return true;\n  }\n  catch (err) {\n    if (err instanceof AttributeValidationError) {\n      return false;\n    }\n    else {\n      throw err;\n    }\n  }\n}\n","//\n//  index.js\n//  validated-attributes\n//\n//  Created by Patrick Schneider on 17.05.17.\n//  Copyright (c) 2017 MeetNow! GmbH. All rights reserved.\n//\n// @flow\n//\n\nimport { AttributeValidationError, Attribute } from './base';\n\nimport { FixedAttribute, ObjectAttribute } from './simple';\n\nimport {\n  EnumAttribute,\n  TupleAttribute,\n  CompoundAttribute,\n  SchemaAttribute,\n  toAttribute,\n  isValid,\n} from './combined';\n\nimport type {\n  ValidatorFn,\n  DefaultValue,\n  ElementValidatorFn,\n  ElementIterator,\n} from './types';\n\nimport {\n  typeofPlus,\n  hasOwnProperty,\n  keys,\n} from './util';\n\nconst INTEGER_RE = /^[0-9]+$/;\nconst UUID_RE = /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i;\nconst STRING_DATE_RE = /^[0-9]{4}-(1[0-2]|0[1-9])-(3[01]|[1-2][0-9]|0[1-9])$/;\n\n// http://www.regular-expressions.info/email.html\nconst EMAIL_RE = /^[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$/i;\n\nconst required = {\n  fixed: (v: mixed) => {\n    const a = new FixedAttribute(v);\n    a.name = JSON.stringify(v);\n    return a;\n  },\n\n  string: new Attribute(x => typeofPlus(x) === 'string', ''),\n  integerString: new Attribute((x: any) => typeofPlus(x) === 'string' && INTEGER_RE.test(x), '0'),\n  nonemptyString: new Attribute((x: any) => typeofPlus(x) === 'string' && x.trim().length > 0, '-'),\n  uuid: new Attribute((x: any) => typeofPlus(x) === 'string' && UUID_RE.test(x), '00000000-0000-4000-8000-000000000000'),\n  email: new Attribute((x: any) => typeofPlus(x) === 'string' && EMAIL_RE.test(x), 'name@example.com'),\n  dateString: new Attribute((x: any) => typeofPlus(x) === 'string' && STRING_DATE_RE.test(x) && !Number.isNaN(Date.parse(x)), '2000-01-01'),\n\n  boolean: new Attribute(x => typeofPlus(x) === 'boolean', false),\n  number: new Attribute(x => typeofPlus(x) === 'number', 0),\n  integer: new Attribute(x => typeofPlus(x) === 'number' && x === parseInt(x, 10), 0),\n  regexp: new Attribute(x => typeofPlus(x) === 'regexp', () => new RegExp('')),\n  date: new Attribute(x => typeofPlus(x) === 'date', () => new Date()),\n  function: new Attribute(x => typeofPlus(x) === 'function', () => () => undefined),\n\n  array: new CompoundAttribute(\n    x => typeofPlus(x) === 'array',\n    () => [],\n    (a: Array<mixed>, ev: ElementValidatorFn) => a.forEach(ev)\n  ),\n  map: new CompoundAttribute(\n    x => typeofPlus(x) === 'object',\n    () => {},\n    (o: Object, ev: ElementValidatorFn) => keys(o).forEach(n => ev(o[n], n))\n  ),\n\n  tuple: (elements: Array<mixed>) => {\n    const a = new TupleAttribute(elements);\n    a.name = 'tuple';\n    return a;\n  },\n  schema: (fields: {[string]: mixed}) => {\n    const a = new SchemaAttribute(fields);\n    a.name = 'schema';\n    return a;\n  },\n\n  instanceOf: (cls: any) => {\n    const a = new ObjectAttribute(cls);\n    a.name = `instanceOf(${cls.name})`;\n    return a;\n  },\n  oneOf: (...args: Array<mixed>) => {\n    const a = new EnumAttribute(args);\n    a.name = `oneOf(${a.values.map((attr: Attribute) => attr.name).join(', ')})`;\n    return a;\n  },\n};\n\nfor (const attrName in required) {\n  if (hasOwnProperty(required, attrName)) {\n    const a = required[attrName];\n    if (typeof a !== 'function') {\n      a.name = attrName;\n    }\n  }\n}\n\nconst optional: typeof(required) = {\n  fixed: (v: mixed) => required.fixed(v).makeOptional(),\n\n  string: required.string.makeOptional(),\n  nonemptyString: required.nonemptyString.makeOptional(),\n  integerString: required.integerString.makeOptional(),\n  uuid: required.uuid.makeOptional(),\n  email: required.email.makeOptional(),\n  dateString: required.dateString.makeOptional(),\n\n  boolean: required.boolean.makeOptional(),\n  number: required.number.makeOptional(),\n  integer: required.integer.makeOptional(),\n  regexp: required.regexp.makeOptional(),\n  date: required.date.makeOptional(),\n  function: required.function.makeOptional(),\n\n  array: required.array.makeOptional(),\n  map: required.map.makeOptional(),\n\n  tuple: (elements: Array<mixed>) => required.tuple(elements).makeOptional(),\n  schema: (fields: {[string]: mixed}) => required.schema(fields).makeOptional(),\n  instanceOf: (cls: any) => required.instanceOf(cls).makeOptional(),\n  oneOf: (...args: Array<mixed>) => required.oneOf(...args).makeOptional(),\n};\n\nexport default {\n  typeofPlus,\n\n  Attribute,\n  FixedAttribute,\n  CompoundAttribute,\n  TupleAttribute,\n  SchemaAttribute,\n  ObjectAttribute,\n  EnumAttribute,\n  AttributeValidationError,\n\n  validate: (spec: any, value: mixed): any => toAttribute(spec).validate(value),\n  isValid,\n  newDefault: (spec: any): any => toAttribute(spec).newDefault(),\n  mergeDefault: (spec: any, value: mixed, nullIsUndefined: ?boolean): any => toAttribute(spec).mergeDefault(value, nullIsUndefined),\n  newSkeleton: (spec: any): any => toAttribute(spec).newSkeleton(),\n  toAttribute,\n\n  optional,\n  required,\n\n  ...required,\n};\n\nexport type {\n  ValidatorFn,\n  DefaultValue,\n  ElementValidatorFn,\n  ElementIterator,\n};\n"],"names":["typeConversion","undefined","number","boolean","string","function","objToString","Object","prototype","toString","objHasOwnProperty","hasOwnProperty","typeofPlus","x","call","obj","name","assign","source","key","keys","TypeError","result","push","inspect","value","depth","isArray","JSON","stringify","replace","RegExp","Date","Error","Symbol","contents","i","l","length","join","forEach","match","substr","AttributeValidationError","expected","got","optional","Attribute","validator","defaultsTo","flags","default","isOptional","_validator","input","nullIsUndefined","newDefault","c","_clone","flag","_copyAttrProps","FixedAttribute","valueType","ObjectAttribute","Cls","cls","EnumAttribute","values","attrs","map","toAttribute","some","isValid","y","TupleAttribute","selements","elements","e","errors","validate","err","index","Array","arr","mergeDefault","newSkeleton","CompoundAttribute","skeletonMaker","iterator","_skeletonMaker","_iterator","spec","elementAttr","indexOf","eltAttr","elt","SchemaAttribute","sfields","fields","f","v","a","INTEGER_RE","UUID_RE","STRING_DATE_RE","EMAIL_RE","required","fixed","integerString","test","nonemptyString","trim","uuid","email","dateString","Number","isNaN","parse","integer","parseInt","regexp","date","array","ev","o","n","tuple","schema","instanceOf","oneOf","args","attr","attrName","makeOptional"],"mappings":"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"}